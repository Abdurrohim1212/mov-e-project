[{"D:\\Projects\\Glints\\12345\\src\\index.js":"1","D:\\Projects\\Glints\\12345\\src\\App.js":"2","D:\\Projects\\Glints\\12345\\src\\redux\\index.js":"3","D:\\Projects\\Glints\\12345\\src\\Routes.js":"4","D:\\Projects\\Glints\\12345\\src\\components\\Footer.js":"5","D:\\Projects\\Glints\\12345\\src\\components\\Navbar.js":"6","D:\\Projects\\Glints\\12345\\src\\pages\\NotFound\\index.js":"7","D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\index.js":"8","D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\index.js":"9","D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\usersReducer.js":"10","D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\movieReducer.js":"11","D:\\Projects\\Glints\\12345\\src\\pages\\HomePage.js":"12","D:\\Projects\\Glints\\12345\\src\\redux\\actions\\usersAction.js":"13","D:\\Projects\\Glints\\12345\\src\\components\\karosel.js":"14","D:\\Projects\\Glints\\12345\\src\\components\\Carousel.js":"15","D:\\Projects\\Glints\\12345\\src\\redux\\actions\\movie.js":"16","D:\\Projects\\Glints\\12345\\src\\API\\index.js":"17","D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Characters.js":"18","D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Overview.js":"19","D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Review.js":"20"},{"size":469,"mtime":1612752302711,"results":"21","hashOfConfig":"22"},{"size":960,"mtime":1612752302703,"results":"23","hashOfConfig":"22"},{"size":305,"mtime":1612752302715,"results":"24","hashOfConfig":"22"},{"size":249,"mtime":1612752302706,"results":"25","hashOfConfig":"22"},{"size":2009,"mtime":1612752302710,"results":"26","hashOfConfig":"22"},{"size":7725,"mtime":1612752302710,"results":"27","hashOfConfig":"22"},{"size":392,"mtime":1612752302714,"results":"28","hashOfConfig":"22"},{"size":213,"mtime":1612752302715,"results":"29","hashOfConfig":"22"},{"size":3244,"mtime":1612752690631,"results":"30","hashOfConfig":"22"},{"size":494,"mtime":1612752682668,"results":"31","hashOfConfig":"22"},{"size":1125,"mtime":1612752683614,"results":"32","hashOfConfig":"22"},{"size":4687,"mtime":1612754122598,"results":"33","hashOfConfig":"22"},{"size":683,"mtime":1612752685165,"results":"34","hashOfConfig":"22"},{"size":351,"mtime":1612752302711,"results":"35","hashOfConfig":"22"},{"size":1142,"mtime":1612752302710,"results":"36","hashOfConfig":"22"},{"size":2808,"mtime":1612752688309,"results":"37","hashOfConfig":"22"},{"size":174,"mtime":1612752302703,"results":"38","hashOfConfig":"22"},{"size":1022,"mtime":1612752697079,"results":"39","hashOfConfig":"22"},{"size":853,"mtime":1612752696192,"results":"40","hashOfConfig":"22"},{"size":3109,"mtime":1612753148848,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1zyaae",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\Glints\\12345\\src\\index.js",[],["86","87"],"D:\\Projects\\Glints\\12345\\src\\App.js",[],"D:\\Projects\\Glints\\12345\\src\\redux\\index.js",[],"D:\\Projects\\Glints\\12345\\src\\Routes.js",[],"D:\\Projects\\Glints\\12345\\src\\components\\Footer.js",[],"D:\\Projects\\Glints\\12345\\src\\components\\Navbar.js",["88","89"],"import React, { useState, Fragment } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { postSignUp, postSignIn } from '../redux/actions/usersAction'\r\nimport '../Styles/Navbar.css'\r\nimport _ from 'lodash'\r\nimport jwt_decode from 'jwt-decode'\r\nimport Modal from 'react-modal'\r\nimport movE from '../Assets/movE.png'\r\n\r\nexport const MODAL_LOGIN = 1\r\nexport const MODAL_SIGNUP = 2\r\n\r\nfunction Navbarr() {\r\n    const [isModalOpen, setIsModalOpen] = useState(false)\r\n    const [whichModal, setWhichModal] = useState(null)\r\n    const [userData, setUserData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const [userSignIn, setUserSignIn] = useState({\r\n        username: '',\r\n        password: '',\r\n        token: '',\r\n    })\r\n\r\n    const { signup, signIn, jwtToken } = useSelector((state) => state.users)\r\n    console.log('response signup', signup)\r\n    console.log(userData)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const token = localStorage.getItem('token')\r\n    let decoded\r\n    if (token && !_.isEmpty(token)) decoded = jwt_decode(token)\r\n\r\n    return ( <\r\n        Fragment >\r\n        <\r\n        div className = 'navbar-container' >\r\n        <\r\n        a href = '/' >\r\n        <\r\n        img className = 'logoE'\r\n        src = { movE }\r\n        alt = 'movE' / >\r\n        <\r\n        /a> <\r\n        div className = 'signin-button' > {\r\n            decoded ? ( <\r\n                div >\r\n                <\r\n                div className = 'username' > { decoded.username } < /div> <\r\n                button className = 'signout-button'\r\n                onClick = {\r\n                    () => {\r\n                        localStorage.removeItem('token')\r\n                        window.open('/', '_self')\r\n                    }\r\n                } >\r\n                SIGN OUT <\r\n                /button> <\r\n                /div>\r\n            ) : ( <\r\n                button className = 'signin-button'\r\n                onClick = {\r\n                    () => {\r\n                        setIsModalOpen(true)\r\n                        setWhichModal(MODAL_SIGNUP)\r\n                    }\r\n                } >\r\n                Register <\r\n                /button>\r\n            )\r\n        } <\r\n        /div> <\r\n        div >\r\n        <\r\n        Modal isOpen = { isModalOpen }\r\n        onRequestClose = {\r\n            () => setIsModalOpen(false) }\r\n        className = 'modal-container'\r\n        overlayClassName = 'modal-overlay-center'\r\n        contentLabel = 'Sign in' > { renderWhichModal() } <\r\n        /Modal> <\r\n        /div>{' '} <\r\n        /div> <\r\n        /Fragment>\r\n    )\r\n\r\n    function renderWhichModal() {\r\n        const handleLogin = (event) => {\r\n            event.preventDefault()\r\n            setWhichModal(false)\r\n        }\r\n\r\n        const handleChange = (event) => {\r\n            setUserData({\r\n                ...userData,\r\n                [event.target.name]: event.target.value,\r\n            })\r\n        }\r\n\r\n        const handleSignIn = (event) => {\r\n            setUserSignIn({\r\n                ...userSignIn,\r\n                [event.target.name]: event.target.value,\r\n            })\r\n        }\r\n\r\n        const submitSignUp = (event) => {\r\n            event.preventDefault()\r\n            const body = {\r\n                username: userData.name,\r\n                email: userData.email,\r\n                password: userData.password,\r\n            }\r\n\r\n            dispatch(postSignUp(body))\r\n        }\r\n\r\n        const submitSignIn = (event) => {\r\n            event.preventDefault()\r\n            const body = {\r\n                email: userSignIn.email,\r\n                password: userSignIn.password,\r\n            }\r\n\r\n            dispatch(postSignIn(body))\r\n        }\r\n\r\n        switch (whichModal) {\r\n            case MODAL_LOGIN:\r\n                return ( <\r\n                    div className = 'home-signup' >\r\n                    <\r\n                    img className = 'movE'\r\n                    src = { movE }\r\n                    alt = 'movE' / >\r\n                    <\r\n                    form className = 'home-signup-form'\r\n                    onSubmit = { handleLogin } >\r\n                    <\r\n                    div > email < /div> <\r\n                    input className = 'form-input'\r\n                    type = 'email'\r\n                    name = 'email'\r\n                    onChange = {\r\n                        (event) => handleSignIn(event) }\r\n                    />\r\n\r\n                    <\r\n                    div > Password < /div> <\r\n                    input className = 'form-input'\r\n                    type = 'password'\r\n                    name = 'password'\r\n                    onChange = {\r\n                        (event) => handleSignIn(event) }\r\n                    />\r\n\r\n                    <\r\n                    button className = 'home-signup-form-submit'\r\n                    type = 'submit'\r\n                    onClick = { submitSignIn } >\r\n                    Login <\r\n                    /button> <\r\n                    /form>\r\n\r\n                    <\r\n                    h2 className = 'home-signup-redirect' >\r\n                    Haven 't create an account yet? <\r\n                    span className = 'clickToLogin'\r\n                    onClick = {\r\n                        () => setWhichModal(MODAL_SIGNUP) } >\r\n                    &\r\n                    nbsp; Register Here <\r\n                    /span> <\r\n                    /h2> <\r\n                    /div>\r\n                )\r\n            case MODAL_SIGNUP:\r\n                return ( <\r\n                    div >\r\n                    <\r\n                    div className = 'home-signup' >\r\n                    <\r\n                    img className = 'movE'\r\n                    src = { movE }\r\n                    alt = 'movE' / >\r\n                    <\r\n                    form className = 'home-signup-form'\r\n                    onSubmit = { handleLogin } >\r\n                    <\r\n                    div > Full Name < /div> <\r\n                    input className = 'form-input'\r\n                    type = 'text'\r\n                    name = 'name'\r\n                    onChange = {\r\n                        (event) => handleChange(event) }\r\n                    />\r\n\r\n                    <\r\n                    div > Email < /div> <\r\n                    input className = 'form-input'\r\n                    type = 'email'\r\n                    name = 'email'\r\n                    onChange = {\r\n                        (event) => handleChange(event) }\r\n                    />\r\n\r\n                    <\r\n                    div > Password < /div> <\r\n                    input className = 'form-input'\r\n                    type = 'password'\r\n                    name = 'password'\r\n                    onChange = {\r\n                        (event) => handleChange(event) }\r\n                    />\r\n\r\n                    <\r\n                    button className = 'home-signup-form-submit'\r\n                    type = 'submit'\r\n                    onClick = { submitSignUp } >\r\n                    Sign up <\r\n                    /button> <\r\n                    /form> <\r\n                    h2 className = 'home-signup-redirect' >\r\n                    Already have an account ?\r\n                    <\r\n                    span className = 'clickToLogin'\r\n                    onClick = {\r\n                        () => setWhichModal(MODAL_LOGIN) } >\r\n                    &\r\n                    nbsp; Login here <\r\n                    /span> <\r\n                    /h2> <\r\n                    /div> <\r\n                    /div>\r\n                )\r\n            default:\r\n                break\r\n        }\r\n    }\r\n}\r\n\r\nexport default Navbarr","D:\\Projects\\Glints\\12345\\src\\pages\\NotFound\\index.js",[],"D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\index.js",[],"D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\index.js",["90","91"],"import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Container, Jumbotron, Button, Spinner } from 'reactstrap'\r\nimport { Link, Route, Switch, useParams } from 'react-router-dom'\r\nimport { getMovieDetails, getTrailer } from '../../redux/actions/movie'\r\nimport { IMG_SRC } from '../../API/index'\r\nimport Characters from './Tab/Characters'\r\nimport Review from './Tab/Review'\r\nimport Overview from './Tab/Overview'\r\nimport ReactStars from 'react-rating-stars-component'\r\nimport '../../Styles/Tab.css'\r\nfunction Detail(props) {\r\n\tconst { id } = useParams()\r\n\tuseEffect(() => {\r\n\t\tprops.getMovieDetails(id)\r\n\t\tprops.getTrailer(id)\r\n\t}, [props.getMovieDetails, props.getTrailer])\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container className='jumbotron'>\r\n\t\t\t\t{!props.movieDetail ? (\r\n\t\t\t\t\t<Spinner />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Jumbotron\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tbackgroundImage: `url('${IMG_SRC}${props.movieDetail.backdrop_path}')`,\r\n\t\t\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\r\n\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\r\n\t\t\t\t\t\t\t\tcolor: 'white',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tclassName='my-4'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h1> {props.movieDetail.title} </h1>\r\n\t\t\t\t\t\t\t\t<div className='ratings d-flex'>\r\n\t\t\t\t\t\t\t\t\t<div className='mr-3'>\r\n\t\t\t\t\t\t\t\t\t\t<ReactStars size={18} value={props.movieDetail.vote_average / 2} edit={false} isHalf={true} />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{props.movieDetail.vote_count}\r\n\t\t\t\t\t\t\t\t\t\tvote\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className='short-synopsis my-3'>{props.movieDetail.tagline}</p>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t{/* <Link to={{ pathname: `https://www.youtube.com/watch?v=${props.trailer.key}` }} target='_blank'> */}\r\n\t\t\t\t\t\t\t\t\t<Button className='mr-3' color='primary'>\r\n\t\t\t\t\t\t\t\t\t\tWatch trailer\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t{/* </Link> */}\r\n\t\t\t\t\t\t\t\t\t<Button color='primary' outline>\r\n\t\t\t\t\t\t\t\t\t\tAdd to Watchlist\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Jumbotron>\r\n\t\t\t\t\t\t<div className='nav-container'>\r\n\t\t\t\t\t\t\t<ul className='nav nav-pills'>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link' href={`/detail/${props.movieDetail.id}`} exact>\r\n\t\t\t\t\t\t\t\t\t\tOverview\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link' href={`/detail/${props.movieDetail.id}/review`}>\r\n\t\t\t\t\t\t\t\t\t\tReview\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t\t\t<a className='nav-link ' href={`/detail/${props.movieDetail.id}/characters`}>\r\n\t\t\t\t\t\t\t\t\t\tCharacters\r\n\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path='/detail/:id/review' exact component={Review} />\r\n\t\t\t\t\t\t\t<Route path='/detail/:id/characters' exact component={Characters} />\r\n\t\t\t\t\t\t\t<Route path='/detail/:id' exact component={() => <Overview movieDetail={props.movieDetail} />} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tmovieDetail: state.movie.movieDetail,\r\n\t\ttrailer: state.movie.trailer,\r\n\t}\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetMovieDetails: (id) => dispatch(getMovieDetails(id)),\r\n\t\tgetTrailer: (id) => dispatch(getTrailer(id)),\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail)\r\n","D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\usersReducer.js",[],"D:\\Projects\\Glints\\12345\\src\\redux\\reducers\\movieReducer.js",[],"D:\\Projects\\Glints\\12345\\src\\pages\\HomePage.js",["92","93"],"D:\\Projects\\Glints\\12345\\src\\redux\\actions\\usersAction.js",[],"D:\\Projects\\Glints\\12345\\src\\components\\karosel.js",[],"D:\\Projects\\Glints\\12345\\src\\components\\Carousel.js",[],"D:\\Projects\\Glints\\12345\\src\\redux\\actions\\movie.js",[],"D:\\Projects\\Glints\\12345\\src\\API\\index.js",[],"D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Characters.js",["94"],"import React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport '../../../Styles/Characters.css'\r\nimport { getCast } from '../../../redux/actions/movie'\r\nimport { connect } from 'react-redux'\r\nconst imgSrc = 'https://image.tmdb.org/t/p/w500'\r\n\r\nfunction Characters(props) {\r\n\tconst { id } = useParams()\r\n\tuseEffect(() => {\r\n\t\tprops.getCast(id)\r\n\t}, [props.getCast, id])\r\n\r\n\treturn (\r\n\t\t<div className='actor'>\r\n\t\t\t{props.casts && props.casts.length !== 0\r\n\t\t\t\t? props.casts.map((cast, index) => (\r\n\t\t\t\t\t\t<div className='actor-item' key={index}>\r\n\t\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t\t\t<img src={`${imgSrc}${cast.profile_path}`} alt={cast.original_name} /> <h4> {cast.original_name} </h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  ))\r\n\t\t\t\t: ''}\r\n\t\t</div>\r\n\t)\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcasts: state.movie.cast,\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tgetCast: (id) => dispatch(getCast(id)),\r\n\t}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters)\r\n","D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Overview.js",[],"D:\\Projects\\Glints\\12345\\src\\pages\\Detail\\Tab\\Review.js",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":28,"column":21,"nodeType":"102","messageId":"103","endLine":28,"endColumn":27},{"ruleId":"100","severity":1,"message":"104","line":28,"column":29,"nodeType":"102","messageId":"103","endLine":28,"endColumn":37},{"ruleId":"100","severity":1,"message":"105","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":17,"column":5,"nodeType":"108","endLine":17,"endColumn":46,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":3,"column":65,"nodeType":"102","messageId":"103","endLine":3,"endColumn":75},{"ruleId":"106","severity":1,"message":"111","line":19,"column":5,"nodeType":"108","endLine":19,"endColumn":22,"suggestions":"112"},{"ruleId":"106","severity":1,"message":"111","line":12,"column":5,"nodeType":"108","endLine":12,"endColumn":24,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"111","line":21,"column":5,"nodeType":"108","endLine":21,"endColumn":36,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'signIn' is assigned a value but never used.","Identifier","unusedVar","'jwtToken' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["117"],"'getTrailer' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["118"],["119"],["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [id, props, props.getMovieDetails, props.getTrailer]",{"range":"129","text":"130"},"Update the dependencies array to be: [props, props.getMovies]",{"range":"131","text":"132"},"Update the dependencies array to be: [props.getCast, id, props]",{"range":"133","text":"134"},"Update the dependencies array to be: [props.getReviewsByMovieId, id, props]",{"range":"135","text":"136"},[667,708],"[id, props, props.getMovieDetails, props.getTrailer]",[655,672],"[props, props.getMovies]",[380,399],"[props.getCast, id, props]",[769,800],"[props.getReviewsByMovieId, id, props]"]